/*
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.CancelFulfillmentOrderResponse;
import io.swagger.client.model.CreateFulfillmentOrderRequest;
import io.swagger.client.model.CreateFulfillmentOrderResponse;
import io.swagger.client.model.CreateFulfillmentReturnRequest;
import io.swagger.client.model.CreateFulfillmentReturnResponse;
import io.swagger.client.model.GetDeliveryOffersRequest;
import io.swagger.client.model.GetDeliveryOffersResponse;
import io.swagger.client.model.GetFeatureInventoryResponse;
import io.swagger.client.model.GetFeatureSkuResponse;
import io.swagger.client.model.GetFeaturesResponse;
import io.swagger.client.model.GetFulfillmentOrderResponse;
import io.swagger.client.model.GetFulfillmentPreviewRequest;
import io.swagger.client.model.GetFulfillmentPreviewResponse;
import io.swagger.client.model.GetPackageTrackingDetailsResponse;
import io.swagger.client.model.ListAllFulfillmentOrdersResponse;
import io.swagger.client.model.ListReturnReasonCodesResponse;
import org.threeten.bp.OffsetDateTime;
import io.swagger.client.model.SubmitFulfillmentOrderStatusUpdateRequest;
import io.swagger.client.model.SubmitFulfillmentOrderStatusUpdateResponse;
import io.swagger.client.model.UpdateFulfillmentOrderRequest;
import io.swagger.client.model.UpdateFulfillmentOrderResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.amazon.SellingPartnerAPIAA.LWAException;

/**
* API tests for FbaOutboundApi
*/
@Ignore
public class FbaOutboundApiTest {

private final FbaOutboundApi api = new FbaOutboundApi();


/**
* 
*
* Requests that Amazon stop attempting to fulfill the fulfillment order indicated by the specified order identifier.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void cancelFulfillmentOrderTest() throws ApiException, LWAException {
    String sellerFulfillmentOrderId = null;
CancelFulfillmentOrderResponse response = api.cancelFulfillmentOrder(sellerFulfillmentOrderId);

// TODO: test validations
}

/**
* 
*
* Requests that Amazon ship items from the seller&#39;s inventory in Amazon&#39;s fulfillment network to a destination address.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api)
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void createFulfillmentOrderTest() throws ApiException, LWAException {
    CreateFulfillmentOrderRequest body = null;
CreateFulfillmentOrderResponse response = api.createFulfillmentOrder(body);

// TODO: test validations
}

/**
* 
*
* Creates a fulfillment return.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void createFulfillmentReturnTest() throws ApiException, LWAException {
    CreateFulfillmentReturnRequest body = null;
    String sellerFulfillmentOrderId = null;
CreateFulfillmentReturnResponse response = api.createFulfillmentReturn(body, sellerFulfillmentOrderId);

// TODO: test validations
}

/**
* 
*
* Returns delivery options that include an estimated delivery date and offer expiration, based on criteria that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 5 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void deliveryOffersTest() throws ApiException, LWAException {
    GetDeliveryOffersRequest body = null;
GetDeliveryOffersResponse response = api.deliveryOffers(body);

// TODO: test validations
}

/**
* 
*
* Returns a list of inventory items that are eligible for the fulfillment feature you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api)..
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getFeatureInventoryTest() throws ApiException, LWAException {
    String marketplaceId = null;
    String featureName = null;
    String nextToken = null;
    OffsetDateTime queryStartDate = null;
GetFeatureInventoryResponse response = api.getFeatureInventory(marketplaceId, featureName, nextToken, queryStartDate);

// TODO: test validations
}

/**
* 
*
* Returns the number of items with the sellerSKU you specify that can have orders fulfilled using the specified feature. Note that if the sellerSKU isn&#39;t eligible, the response will contain an empty skuInfo object. The parameters for this operation may contain special characters that require URL encoding. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getFeatureSKUTest() throws ApiException, LWAException {
    String marketplaceId = null;
    String featureName = null;
    String sellerSku = null;
GetFeatureSkuResponse response = api.getFeatureSKU(marketplaceId, featureName, sellerSku);

// TODO: test validations
}

/**
* 
*
* Returns a list of features available for Multi-Channel Fulfillment orders in the marketplace you specify, and whether the seller for which you made the call is enrolled for each feature.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getFeaturesTest() throws ApiException, LWAException {
    String marketplaceId = null;
GetFeaturesResponse response = api.getFeatures(marketplaceId);

// TODO: test validations
}

/**
* 
*
* Returns the fulfillment order indicated by the specified order identifier.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getFulfillmentOrderTest() throws ApiException, LWAException {
    String sellerFulfillmentOrderId = null;
GetFulfillmentOrderResponse response = api.getFulfillmentOrder(sellerFulfillmentOrderId);

// TODO: test validations
}

/**
* 
*
* Returns a list of fulfillment order previews based on shipping criteria that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getFulfillmentPreviewTest() throws ApiException, LWAException {
    GetFulfillmentPreviewRequest body = null;
GetFulfillmentPreviewResponse response = api.getFulfillmentPreview(body);

// TODO: test validations
}

/**
* 
*
* Returns delivery tracking information for a package in an outbound shipment for a Multi-Channel Fulfillment order.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void getPackageTrackingDetailsTest() throws ApiException, LWAException {
    Integer packageNumber = null;
GetPackageTrackingDetailsResponse response = api.getPackageTrackingDetails(packageNumber);

// TODO: test validations
}

/**
* 
*
* Returns a list of fulfillment orders fulfilled after (or at) a specified date-time, or indicated by the next token parameter.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api)
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listAllFulfillmentOrdersTest() throws ApiException, LWAException {
    OffsetDateTime queryStartDate = null;
    String nextToken = null;
ListAllFulfillmentOrdersResponse response = api.listAllFulfillmentOrders(queryStartDate, nextToken);

// TODO: test validations
}

/**
* 
*
* Returns a list of return reason codes for a seller SKU in a given marketplace. The parameters for this operation may contain special characters that require URL encoding. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void listReturnReasonCodesTest() throws ApiException, LWAException {
    String sellerSku = null;
    String marketplaceId = null;
    String sellerFulfillmentOrderId = null;
    String language = null;
ListReturnReasonCodesResponse response = api.listReturnReasonCodes(sellerSku, marketplaceId, sellerFulfillmentOrderId, language);

// TODO: test validations
}

/**
* 
*
* Requests that Amazon update the status of an order in the sandbox testing environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Fulfillment Outbound Dynamic Sandbox Guide](https://developer-docs.amazon.com/sp-api/docs/fulfillment-outbound-dynamic-sandbox-guide) and [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information.
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void submitFulfillmentOrderStatusUpdateTest() throws ApiException, LWAException {
    String sellerFulfillmentOrderId = null;
    SubmitFulfillmentOrderStatusUpdateRequest body = null;
SubmitFulfillmentOrderStatusUpdateResponse response = api.submitFulfillmentOrderStatusUpdate(sellerFulfillmentOrderId, body);

// TODO: test validations
}

/**
* 
*
* Updates and/or requests shipment for a fulfillment order with an order hold on it.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The &#x60;x-amzn-RateLimit-Limit&#x60; response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
*
* @throws ApiException if the Api call fails
* @throws LWAException If calls to fetch LWA access token fails
*/
@Test
public void updateFulfillmentOrderTest() throws ApiException, LWAException {
    UpdateFulfillmentOrderRequest body = null;
    String sellerFulfillmentOrderId = null;
UpdateFulfillmentOrderResponse response = api.updateFulfillmentOrder(body, sellerFulfillmentOrderId);

// TODO: test validations
}

}