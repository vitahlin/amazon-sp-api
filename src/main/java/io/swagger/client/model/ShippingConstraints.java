/*
 * Selling Partner API for Orders
 * Use the Orders Selling Partner API to programmatically retrieve order information. With this API, you can develop fast, flexible, and custom applications to manage order synchronization, perform order research, and create demand-based decision support tools.   _Note:_ For the JP, AU, and SG marketplaces, the Orders API supports orders from 2016 onward. For all other marketplaces, the Orders API supports orders for the last two years (orders older than this don't show up in the response).
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ConstraintType;
import java.io.IOException;

/**
 * Delivery constraints applicable to this order.
 */
@ApiModel(description = "Delivery constraints applicable to this order.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-10-31T20:07:17.661+08:00")
public class ShippingConstraints {
  @SerializedName("PalletDelivery")
  private ConstraintType palletDelivery = null;

  @SerializedName("SignatureConfirmation")
  private ConstraintType signatureConfirmation = null;

  @SerializedName("RecipientIdentityVerification")
  private ConstraintType recipientIdentityVerification = null;

  @SerializedName("RecipientAgeVerification")
  private ConstraintType recipientAgeVerification = null;

  public ShippingConstraints palletDelivery(ConstraintType palletDelivery) {
    this.palletDelivery = palletDelivery;
    return this;
  }

   /**
   * Indicates if the line item needs to be delivered by pallet.
   * @return palletDelivery
  **/
  @ApiModelProperty(value = "Indicates if the line item needs to be delivered by pallet.")
  public ConstraintType getPalletDelivery() {
    return palletDelivery;
  }

  public void setPalletDelivery(ConstraintType palletDelivery) {
    this.palletDelivery = palletDelivery;
  }

  public ShippingConstraints signatureConfirmation(ConstraintType signatureConfirmation) {
    this.signatureConfirmation = signatureConfirmation;
    return this;
  }

   /**
   * Indicates that the recipient of the line item must sign to confirm its delivery.
   * @return signatureConfirmation
  **/
  @ApiModelProperty(value = "Indicates that the recipient of the line item must sign to confirm its delivery.")
  public ConstraintType getSignatureConfirmation() {
    return signatureConfirmation;
  }

  public void setSignatureConfirmation(ConstraintType signatureConfirmation) {
    this.signatureConfirmation = signatureConfirmation;
  }

  public ShippingConstraints recipientIdentityVerification(ConstraintType recipientIdentityVerification) {
    this.recipientIdentityVerification = recipientIdentityVerification;
    return this;
  }

   /**
   * Indicates that the person receiving the line item must be the same as the intended recipient of the order.
   * @return recipientIdentityVerification
  **/
  @ApiModelProperty(value = "Indicates that the person receiving the line item must be the same as the intended recipient of the order.")
  public ConstraintType getRecipientIdentityVerification() {
    return recipientIdentityVerification;
  }

  public void setRecipientIdentityVerification(ConstraintType recipientIdentityVerification) {
    this.recipientIdentityVerification = recipientIdentityVerification;
  }

  public ShippingConstraints recipientAgeVerification(ConstraintType recipientAgeVerification) {
    this.recipientAgeVerification = recipientAgeVerification;
    return this;
  }

   /**
   * Indicates that the carrier must confirm the recipient is of the legal age to receive the line item upon delivery.
   * @return recipientAgeVerification
  **/
  @ApiModelProperty(value = "Indicates that the carrier must confirm the recipient is of the legal age to receive the line item upon delivery.")
  public ConstraintType getRecipientAgeVerification() {
    return recipientAgeVerification;
  }

  public void setRecipientAgeVerification(ConstraintType recipientAgeVerification) {
    this.recipientAgeVerification = recipientAgeVerification;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShippingConstraints shippingConstraints = (ShippingConstraints) o;
    return Objects.equals(this.palletDelivery, shippingConstraints.palletDelivery) &&
        Objects.equals(this.signatureConfirmation, shippingConstraints.signatureConfirmation) &&
        Objects.equals(this.recipientIdentityVerification, shippingConstraints.recipientIdentityVerification) &&
        Objects.equals(this.recipientAgeVerification, shippingConstraints.recipientAgeVerification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(palletDelivery, signatureConfirmation, recipientIdentityVerification, recipientAgeVerification);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShippingConstraints {\n");
    
    sb.append("    palletDelivery: ").append(toIndentedString(palletDelivery)).append("\n");
    sb.append("    signatureConfirmation: ").append(toIndentedString(signatureConfirmation)).append("\n");
    sb.append("    recipientIdentityVerification: ").append(toIndentedString(recipientIdentityVerification)).append("\n");
    sb.append("    recipientAgeVerification: ").append(toIndentedString(recipientAgeVerification)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

