/*
 * The Selling Partner API for Finances
 * The Selling Partner API for Finances provides financial information relevant to a seller's business. You can obtain financial events for a given order or date range without having to wait until a statement period closes.
 *
 * OpenAPI spec version: 2024-06-19
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Breakdown;
import io.swagger.client.model.Currency;
import java.io.IOException;

/**
 * Details about the movement of money in the financial transaction. Breakdowns are further categorized into breakdown types, breakdown amounts, and further breakdowns.
 */
@ApiModel(description = "Details about the movement of money in the financial transaction. Breakdowns are further categorized into breakdown types, breakdown amounts, and further breakdowns.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-10-31T19:54:45.982+08:00")
public class Breakdown {
  @SerializedName("breakdownType")
  private String breakdownType = null;

  @SerializedName("breakdownAmount")
  private Currency breakdownAmount = null;

  @SerializedName("breakdowns")
  private Breakdown breakdowns = null;

  public Breakdown breakdownType(String breakdownType) {
    this.breakdownType = breakdownType;
    return this;
  }

   /**
   * The type of charge.
   * @return breakdownType
  **/
  @ApiModelProperty(value = "The type of charge.")
  public String getBreakdownType() {
    return breakdownType;
  }

  public void setBreakdownType(String breakdownType) {
    this.breakdownType = breakdownType;
  }

  public Breakdown breakdownAmount(Currency breakdownAmount) {
    this.breakdownAmount = breakdownAmount;
    return this;
  }

   /**
   * The monetary amount of the charge.
   * @return breakdownAmount
  **/
  @ApiModelProperty(value = "The monetary amount of the charge.")
  public Currency getBreakdownAmount() {
    return breakdownAmount;
  }

  public void setBreakdownAmount(Currency breakdownAmount) {
    this.breakdownAmount = breakdownAmount;
  }

  public Breakdown breakdowns(Breakdown breakdowns) {
    this.breakdowns = breakdowns;
    return this;
  }

   /**
   * Further breakdowns of &#x60;BreakdownType&#x60;.
   * @return breakdowns
  **/
  @ApiModelProperty(value = "Further breakdowns of `BreakdownType`.")
  public Breakdown getBreakdowns() {
    return breakdowns;
  }

  public void setBreakdowns(Breakdown breakdowns) {
    this.breakdowns = breakdowns;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Breakdown breakdown = (Breakdown) o;
    return Objects.equals(this.breakdownType, breakdown.breakdownType) &&
        Objects.equals(this.breakdownAmount, breakdown.breakdownAmount) &&
        Objects.equals(this.breakdowns, breakdown.breakdowns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(breakdownType, breakdownAmount, breakdowns);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Breakdown {\n");
    
    sb.append("    breakdownType: ").append(toIndentedString(breakdownType)).append("\n");
    sb.append("    breakdownAmount: ").append(toIndentedString(breakdownAmount)).append("\n");
    sb.append("    breakdowns: ").append(toIndentedString(breakdowns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

