/*
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).
 *
 * OpenAPI spec version: 2022-05-01
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.LowestPricedOffersInput;
import io.swagger.client.model.Offer;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The lowest priced offer for the requested item condition and offer type.
 */
@ApiModel(description = "The lowest priced offer for the requested item condition and offer type.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-10-31T20:08:31.630+08:00")
public class LowestPricedOffer {
  @SerializedName("lowestPricedOffersInput")
  private LowestPricedOffersInput lowestPricedOffersInput = null;

  @SerializedName("offers")
  private List<Offer> offers = new ArrayList<Offer>();

  public LowestPricedOffer lowestPricedOffersInput(LowestPricedOffersInput lowestPricedOffersInput) {
    this.lowestPricedOffersInput = lowestPricedOffersInput;
    return this;
  }

   /**
   * The filtering criteria used to retrieve this lowest-priced offers correspond to the &#x60;lowestPricedOffersInputs&#x60; received in the request.
   * @return lowestPricedOffersInput
  **/
  @ApiModelProperty(required = true, value = "The filtering criteria used to retrieve this lowest-priced offers correspond to the `lowestPricedOffersInputs` received in the request.")
  public LowestPricedOffersInput getLowestPricedOffersInput() {
    return lowestPricedOffersInput;
  }

  public void setLowestPricedOffersInput(LowestPricedOffersInput lowestPricedOffersInput) {
    this.lowestPricedOffersInput = lowestPricedOffersInput;
  }

  public LowestPricedOffer offers(List<Offer> offers) {
    this.offers = offers;
    return this;
  }

  public LowestPricedOffer addOffersItem(Offer offersItem) {
    this.offers.add(offersItem);
    return this;
  }

   /**
   * A list of up to 20 lowest priced offers that match the criteria specified in the &#x60;lowestPricedOffersInput&#x60; parameter.
   * @return offers
  **/
  @ApiModelProperty(required = true, value = "A list of up to 20 lowest priced offers that match the criteria specified in the `lowestPricedOffersInput` parameter.")
  public List<Offer> getOffers() {
    return offers;
  }

  public void setOffers(List<Offer> offers) {
    this.offers = offers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LowestPricedOffer lowestPricedOffer = (LowestPricedOffer) o;
    return Objects.equals(this.lowestPricedOffersInput, lowestPricedOffer.lowestPricedOffersInput) &&
        Objects.equals(this.offers, lowestPricedOffer.offers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lowestPricedOffersInput, offers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LowestPricedOffer {\n");
    
    sb.append("    lowestPricedOffersInput: ").append(toIndentedString(lowestPricedOffersInput)).append("\n");
    sb.append("    offers: ").append(toIndentedString(offers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

