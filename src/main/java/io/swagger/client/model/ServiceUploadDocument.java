/*
 * Selling Partner API for Services
 * With the Services API, you can build applications that help service providers get and modify their service orders and manage their resources.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * Input for to be uploaded document.
 */
@ApiModel(description = "Input for to be uploaded document.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-10-31T20:16:19.109+08:00")
public class ServiceUploadDocument {
  /**
   * The content type of the to-be-uploaded file
   */
  @JsonAdapter(ContentTypeEnum.Adapter.class)
  public enum ContentTypeEnum {
    TIFF("TIFF"),
    
    JPG("JPG"),
    
    PNG("PNG"),
    
    JPEG("JPEG"),
    
    GIF("GIF"),
    
    PDF("PDF");

    private String value;

    ContentTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ContentTypeEnum fromValue(String text) {
      for (ContentTypeEnum b : ContentTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ContentTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ContentTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ContentTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ContentTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("contentType")
  private ContentTypeEnum contentType = null;

  @SerializedName("contentLength")
  private BigDecimal contentLength = null;

  @SerializedName("contentMD5")
  private String contentMD5 = null;

  public ServiceUploadDocument contentType(ContentTypeEnum contentType) {
    this.contentType = contentType;
    return this;
  }

   /**
   * The content type of the to-be-uploaded file
   * @return contentType
  **/
  @ApiModelProperty(required = true, value = "The content type of the to-be-uploaded file")
  public ContentTypeEnum getContentType() {
    return contentType;
  }

  public void setContentType(ContentTypeEnum contentType) {
    this.contentType = contentType;
  }

  public ServiceUploadDocument contentLength(BigDecimal contentLength) {
    this.contentLength = contentLength;
    return this;
  }

   /**
   * The content length of the to-be-uploaded file
   * minimum: 1
   * maximum: 5242880
   * @return contentLength
  **/
  @ApiModelProperty(required = true, value = "The content length of the to-be-uploaded file")
  public BigDecimal getContentLength() {
    return contentLength;
  }

  public void setContentLength(BigDecimal contentLength) {
    this.contentLength = contentLength;
  }

  public ServiceUploadDocument contentMD5(String contentMD5) {
    this.contentMD5 = contentMD5;
    return this;
  }

   /**
   * An MD5 hash of the content to be submitted to the upload destination. This value is used to determine if the data has been corrupted or tampered with during transit.
   * @return contentMD5
  **/
  @ApiModelProperty(value = "An MD5 hash of the content to be submitted to the upload destination. This value is used to determine if the data has been corrupted or tampered with during transit.")
  public String getContentMD5() {
    return contentMD5;
  }

  public void setContentMD5(String contentMD5) {
    this.contentMD5 = contentMD5;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceUploadDocument serviceUploadDocument = (ServiceUploadDocument) o;
    return Objects.equals(this.contentType, serviceUploadDocument.contentType) &&
        Objects.equals(this.contentLength, serviceUploadDocument.contentLength) &&
        Objects.equals(this.contentMD5, serviceUploadDocument.contentMD5);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentType, contentLength, contentMD5);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceUploadDocument {\n");
    
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    contentLength: ").append(toIndentedString(contentLength)).append("\n");
    sb.append("    contentMD5: ").append(toIndentedString(contentMD5)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

