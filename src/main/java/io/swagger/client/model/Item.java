/*
 * The Selling Partner API for Finances
 * The Selling Partner API for Finances provides financial information relevant to a seller's business. You can obtain financial events for a given order or date range without having to wait until a statement period closes.
 *
 * OpenAPI spec version: 2024-06-19
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Breakdowns;
import io.swagger.client.model.Contexts;
import io.swagger.client.model.Currency;
import io.swagger.client.model.ItemRelatedIdentifiers;
import java.io.IOException;

/**
 * Additional information about the items in a transaction.
 */
@ApiModel(description = "Additional information about the items in a transaction.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-10-31T19:54:45.982+08:00")
public class Item {
  @SerializedName("description")
  private String description = null;

  @SerializedName("relatedIdentifiers")
  private ItemRelatedIdentifiers relatedIdentifiers = null;

  @SerializedName("totalAmount")
  private Currency totalAmount = null;

  @SerializedName("breakdowns")
  private Breakdowns breakdowns = null;

  @SerializedName("contexts")
  private Contexts contexts = null;

  public Item description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A description of the items in a transaction.
   * @return description
  **/
  @ApiModelProperty(value = "A description of the items in a transaction.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Item relatedIdentifiers(ItemRelatedIdentifiers relatedIdentifiers) {
    this.relatedIdentifiers = relatedIdentifiers;
    return this;
  }

   /**
   * Related business identifiers of the item.
   * @return relatedIdentifiers
  **/
  @ApiModelProperty(value = "Related business identifiers of the item.")
  public ItemRelatedIdentifiers getRelatedIdentifiers() {
    return relatedIdentifiers;
  }

  public void setRelatedIdentifiers(ItemRelatedIdentifiers relatedIdentifiers) {
    this.relatedIdentifiers = relatedIdentifiers;
  }

  public Item totalAmount(Currency totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

   /**
   * The total monetary amount of the item.
   * @return totalAmount
  **/
  @ApiModelProperty(value = "The total monetary amount of the item.")
  public Currency getTotalAmount() {
    return totalAmount;
  }

  public void setTotalAmount(Currency totalAmount) {
    this.totalAmount = totalAmount;
  }

  public Item breakdowns(Breakdowns breakdowns) {
    this.breakdowns = breakdowns;
    return this;
  }

   /**
   * A list of breakdowns that provide details on how the total amount is calculated for the transaction.
   * @return breakdowns
  **/
  @ApiModelProperty(value = "A list of breakdowns that provide details on how the total amount is calculated for the transaction.")
  public Breakdowns getBreakdowns() {
    return breakdowns;
  }

  public void setBreakdowns(Breakdowns breakdowns) {
    this.breakdowns = breakdowns;
  }

  public Item contexts(Contexts contexts) {
    this.contexts = contexts;
    return this;
  }

   /**
   * Additional Information about the item.
   * @return contexts
  **/
  @ApiModelProperty(value = "Additional Information about the item.")
  public Contexts getContexts() {
    return contexts;
  }

  public void setContexts(Contexts contexts) {
    this.contexts = contexts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Item item = (Item) o;
    return Objects.equals(this.description, item.description) &&
        Objects.equals(this.relatedIdentifiers, item.relatedIdentifiers) &&
        Objects.equals(this.totalAmount, item.totalAmount) &&
        Objects.equals(this.breakdowns, item.breakdowns) &&
        Objects.equals(this.contexts, item.contexts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, relatedIdentifiers, totalAmount, breakdowns, contexts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Item {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    relatedIdentifiers: ").append(toIndentedString(relatedIdentifiers)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    breakdowns: ").append(toIndentedString(breakdowns)).append("\n");
    sb.append("    contexts: ").append(toIndentedString(contexts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

