/*
 * The Selling Partner API for FBA inbound operations.
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Currency;
import java.io.IOException;

/**
 * Freight information describes the skus being transported. Freight carrier options and quotes will only be returned if the freight information is provided.
 */
@ApiModel(description = "Freight information describes the skus being transported. Freight carrier options and quotes will only be returned if the freight information is provided.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-10-31T19:58:38.239+08:00")
public class FreightInformation {
  @SerializedName("declaredValue")
  private Currency declaredValue = null;

  @SerializedName("freightClass")
  private String freightClass = null;

  public FreightInformation declaredValue(Currency declaredValue) {
    this.declaredValue = declaredValue;
    return this;
  }

   /**
   * Get declaredValue
   * @return declaredValue
  **/
  @ApiModelProperty(value = "")
  public Currency getDeclaredValue() {
    return declaredValue;
  }

  public void setDeclaredValue(Currency declaredValue) {
    this.declaredValue = declaredValue;
  }

  public FreightInformation freightClass(String freightClass) {
    this.freightClass = freightClass;
    return this;
  }

   /**
   * Freight class.  Possible values: &#x60;NONE&#x60;, &#x60;FC_50&#x60;, &#x60;FC_55&#x60;, &#x60;FC_60&#x60;, &#x60;FC_65&#x60;, &#x60;FC_70&#x60;, &#x60;FC_77_5&#x60;, &#x60;FC_85&#x60;, &#x60;FC_92_5&#x60;, &#x60;FC_100&#x60;, &#x60;FC_110&#x60;, &#x60;FC_125&#x60;, &#x60;FC_150&#x60;, &#x60;FC_175&#x60;, &#x60;FC_200&#x60;, &#x60;FC_250&#x60;, &#x60;FC_300&#x60;, &#x60;FC_400&#x60;, &#x60;FC_500&#x60;.
   * @return freightClass
  **/
  @ApiModelProperty(value = "Freight class.  Possible values: `NONE`, `FC_50`, `FC_55`, `FC_60`, `FC_65`, `FC_70`, `FC_77_5`, `FC_85`, `FC_92_5`, `FC_100`, `FC_110`, `FC_125`, `FC_150`, `FC_175`, `FC_200`, `FC_250`, `FC_300`, `FC_400`, `FC_500`.")
  public String getFreightClass() {
    return freightClass;
  }

  public void setFreightClass(String freightClass) {
    this.freightClass = freightClass;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FreightInformation freightInformation = (FreightInformation) o;
    return Objects.equals(this.declaredValue, freightInformation.declaredValue) &&
        Objects.equals(this.freightClass, freightInformation.freightClass);
  }

  @Override
  public int hashCode() {
    return Objects.hash(declaredValue, freightClass);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FreightInformation {\n");
    
    sb.append("    declaredValue: ").append(toIndentedString(declaredValue)).append("\n");
    sb.append("    freightClass: ").append(toIndentedString(freightClass)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

