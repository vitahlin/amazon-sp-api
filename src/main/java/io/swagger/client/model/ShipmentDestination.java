/*
 * The Selling Partner API for FBA inbound operations.
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Address;
import java.io.IOException;

/**
 * The Amazon fulfillment center address and warehouse ID.
 */
@ApiModel(description = "The Amazon fulfillment center address and warehouse ID.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-10-31T19:58:38.239+08:00")
public class ShipmentDestination {
  @SerializedName("address")
  private Address address = null;

  @SerializedName("destinationType")
  private String destinationType = null;

  @SerializedName("warehouseId")
  private String warehouseId = null;

  public ShipmentDestination address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * The address the shipment should be sent to. Empty if the destination type is &#x60;AMAZON_OPTIMIZED&#x60;.
   * @return address
  **/
  @ApiModelProperty(value = "The address the shipment should be sent to. Empty if the destination type is `AMAZON_OPTIMIZED`.")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }

  public ShipmentDestination destinationType(String destinationType) {
    this.destinationType = destinationType;
    return this;
  }

   /**
   * The type of destination for this shipment. Possible values: &#x60;AMAZON_OPTIMIZED&#x60;, &#x60;AMAZON_WAREHOUSE&#x60;.
   * @return destinationType
  **/
  @ApiModelProperty(required = true, value = "The type of destination for this shipment. Possible values: `AMAZON_OPTIMIZED`, `AMAZON_WAREHOUSE`.")
  public String getDestinationType() {
    return destinationType;
  }

  public void setDestinationType(String destinationType) {
    this.destinationType = destinationType;
  }

  public ShipmentDestination warehouseId(String warehouseId) {
    this.warehouseId = warehouseId;
    return this;
  }

   /**
   * The warehouse that the shipment should be sent to. Empty if the destination type is &#x60;AMAZON_OPTIMIZED&#x60;.
   * @return warehouseId
  **/
  @ApiModelProperty(value = "The warehouse that the shipment should be sent to. Empty if the destination type is `AMAZON_OPTIMIZED`.")
  public String getWarehouseId() {
    return warehouseId;
  }

  public void setWarehouseId(String warehouseId) {
    this.warehouseId = warehouseId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipmentDestination shipmentDestination = (ShipmentDestination) o;
    return Objects.equals(this.address, shipmentDestination.address) &&
        Objects.equals(this.destinationType, shipmentDestination.destinationType) &&
        Objects.equals(this.warehouseId, shipmentDestination.warehouseId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, destinationType, warehouseId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipmentDestination {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    destinationType: ").append(toIndentedString(destinationType)).append("\n");
    sb.append("    warehouseId: ").append(toIndentedString(warehouseId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

