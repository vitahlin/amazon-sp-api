/*
 * The Selling Partner API for Finances
 * The Selling Partner API for Finances provides financial information relevant to a seller's business. You can obtain financial events for a given order or date range without having to wait until a statement period closes.
 *
 * OpenAPI spec version: 2024-06-19
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Additional information related to deferred transactions.
 */
@ApiModel(description = "Additional information related to deferred transactions.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-10-31T19:54:45.982+08:00")
public class DeferredContext {
  @SerializedName("deferralReason")
  private String deferralReason = null;

  @SerializedName("maturityDate")
  private String maturityDate = null;

  @SerializedName("deferralStatus")
  private String deferralStatus = null;

  public DeferredContext deferralReason(String deferralReason) {
    this.deferralReason = deferralReason;
    return this;
  }

   /**
   * Deferral policy applied on the transaction.  **Examples:** &#x60;B2B&#x60;,&#x60;DD7&#x60;
   * @return deferralReason
  **/
  @ApiModelProperty(value = "Deferral policy applied on the transaction.  **Examples:** `B2B`,`DD7`")
  public String getDeferralReason() {
    return deferralReason;
  }

  public void setDeferralReason(String deferralReason) {
    this.deferralReason = deferralReason;
  }

  public DeferredContext maturityDate(String maturityDate) {
    this.maturityDate = maturityDate;
    return this;
  }

   /**
   * The release date of the transaction.
   * @return maturityDate
  **/
  @ApiModelProperty(value = "The release date of the transaction.")
  public String getMaturityDate() {
    return maturityDate;
  }

  public void setMaturityDate(String maturityDate) {
    this.maturityDate = maturityDate;
  }

  public DeferredContext deferralStatus(String deferralStatus) {
    this.deferralStatus = deferralStatus;
    return this;
  }

   /**
   * The status of the transaction. For example, &#x60;HOLD&#x60;,&#x60;RELEASE&#x60;.
   * @return deferralStatus
  **/
  @ApiModelProperty(value = "The status of the transaction. For example, `HOLD`,`RELEASE`.")
  public String getDeferralStatus() {
    return deferralStatus;
  }

  public void setDeferralStatus(String deferralStatus) {
    this.deferralStatus = deferralStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeferredContext deferredContext = (DeferredContext) o;
    return Objects.equals(this.deferralReason, deferredContext.deferralReason) &&
        Objects.equals(this.maturityDate, deferredContext.maturityDate) &&
        Objects.equals(this.deferralStatus, deferredContext.deferralStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deferralReason, maturityDate, deferralStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeferredContext {\n");
    
    sb.append("    deferralReason: ").append(toIndentedString(deferralReason)).append("\n");
    sb.append("    maturityDate: ").append(toIndentedString(maturityDate)).append("\n");
    sb.append("    deferralStatus: ").append(toIndentedString(deferralStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

